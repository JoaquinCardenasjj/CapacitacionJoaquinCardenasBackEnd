// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaNexos.DataLayer;

namespace PruebaNexos.Migrations
{
    [DbContext(typeof(DbContextApplication))]
    [Migration("20200407173724_Inicial_5")]
    partial class Inicial_5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PruebaNexos.DataLayer.Medico", b =>
                {
                    b.Property<int>("Id_Medico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoMedico")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(120)")
                        .HasMaxLength(120);

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(120)")
                        .HasMaxLength(120);

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("Id_Medico");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("PruebaNexos.DataLayer.MedicoPaciente", b =>
                {
                    b.Property<int>("Id_MedicoPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("Medico_Id")
                        .HasColumnType("int");

                    b.Property<int>("Paciente_Id")
                        .HasColumnType("int");

                    b.HasKey("Id_MedicoPaciente");

                    b.HasIndex("Medico_Id");

                    b.HasIndex("Paciente_Id");

                    b.ToTable("MedicoPacientes");
                });

            modelBuilder.Entity("PruebaNexos.DataLayer.Paciente", b =>
                {
                    b.Property<int>("Id_Paciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MedicoPreferido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroSeguroSocial")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Paciente");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("PruebaNexos.DataLayer.MedicoPaciente", b =>
                {
                    b.HasOne("PruebaNexos.DataLayer.Medico", "Medico")
                        .WithMany("MedicosPaciente")
                        .HasForeignKey("Medico_Id")
                        .HasConstraintName("FK_MEDP_MED")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PruebaNexos.DataLayer.Paciente", "Paciente")
                        .WithMany("MedicosPaciente")
                        .HasForeignKey("Paciente_Id")
                        .HasConstraintName("FK_MEDP_PAC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
